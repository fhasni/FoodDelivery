//
//  HomePresenter.swift
//  FoodDelivery
//
//  Created by fhasni on 10/29/20.
//  Copyright (c) 2020 fhasni. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import RxSwift
import RxCocoa

final class HomePresenter {

    // MARK: - Private properties -

    private unowned let view: HomeViewInterface
    private let formatter: HomeFormatterInterface
    private let interactor: HomeInteractorInterface
    private let wireframe: HomeWireframeInterface

    // MARK: - Lifecycle -

    init(view: HomeViewInterface, formatter: HomeFormatterInterface, interactor: HomeInteractorInterface, wireframe: HomeWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension HomePresenter: HomePresenterInterface {

    func configure(with output: Home.ViewOutput) -> Home.ViewInput {

        let formatterInput = Home.FormatterInput()

        let formatterOutput = formatter.format(for: formatterInput)
        
        let categories = interactor.menu.asObservable()
                                        .map { $0.categories ?? [] }
                                        .observeOn(MainScheduler.instance)
                                        .subscribeOn(ConcurrentDispatchQueueScheduler(qos: .background))
        
        return Home.ViewInput(models: formatterOutput, categories: categories)
    }

}
