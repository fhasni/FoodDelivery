//
//  HomeViewController.swift
//  FoodDelivery
//
//  Created by fhasni on 10/29/20.
//  Copyright (c) 2020 fhasni. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

final class HomeViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: HomePresenterInterface!

    // MARK: - Private properties -

    private lazy var promotionsView: PromotionsView = {
        let view = PromotionsView()
        view.presenter = self.presenter
        return view
    }()
    
    private lazy var foodMenuView : FoodMenuView = {
        let view = FoodMenuView()
        view.presenter = self.presenter
        return view
    }()
    
    private let disposeBag = DisposeBag()

    
    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
        setupView()
    }

}

// MARK: - Extensions -

extension HomeViewController: HomeViewInterface {
}

private extension HomeViewController {

    func setupView() {
        let output = Home.ViewOutput()

        let input = presenter.configure(with: output)
        
        input.menu.subscribe({ (event) in
            switch event {
            case .success(let menu):
                print("DEBUG: Data loaded successfuly: \(menu?.categories?.count)")
            case .error(let error):
                print("DEBUG: Error while loading data: \(error.localizedDescription)")
            }
        }).disposed(by: disposeBag)
    }

    func configureUI () {
        configureNavigationBar()
                
        view.addSubview(promotionsView)
        promotionsView.anchor(top: view.topAnchor, left: view.leftAnchor, right: view.rightAnchor, paddingTop: -22 , height: 22+55)
        
        view.addSubview(foodMenuView)
        foodMenuView.anchor(top: promotionsView.bottomAnchor, left: view.leftAnchor, right: view.rightAnchor, paddingTop: -55 , height: view.frame.height)
    }
    
    func configureNavigationBar() {
        navigationController?.navigationBar.isHidden = true
        navigationController?.navigationBar.barStyle = .black
    }
}
